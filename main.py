from fastapi import FastAPI, Request
import httpx
import os
import asyncio

BOT_TOKEN = os.getenv("BOT_TOKEN")
WEBHOOK_SECRET = os.getenv("WEBHOOK_SECRET")
TELEGRAM_API = f"https://api.telegram.org/bot{BOT_TOKEN}"

app = FastAPI()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö –∞–ø–¥–µ–π—Ç–æ–≤ –æ—Ç Telegram
@app.post("/webhook/{webhook_token}")
async def handle_webhook(webhook_token: str, request: Request):
    if webhook_token != WEBHOOK_SECRET:
        return {"error": "invalid secret"}

    update = await request.json()

    # –ï—Å–ª–∏ —ç—Ç–æ –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –ª–∏—á–∫–∏
    if "message" in update:
        message = update["message"]
        chat_id = message["chat"]["id"]
        text = message.get("text")

        if text == "!hi":
            await send_message(chat_id, "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–∏–∑–Ω–µ—Å-–±–æ—Ç üõçÔ∏è")

    # –ï—Å–ª–∏ —ç—Ç–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∏–∑–Ω–µ—Å-–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    if "business_connection" in update:
        # –ü—Ä–∏–º–µ—Ä –ø—Ä–æ—Å—Ç–æ–π —Ä–µ–∞–∫—Ü–∏–∏
        conn = update["business_connection"]
        print("–ù–æ–≤–æ–µ –±–∏–∑–Ω–µ—Å-–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ:", conn)

    return {"ok": True}


async def send_message(chat_id: int, text: str):
    async with httpx.AsyncClient() as client:
        await client.post(f"{TELEGRAM_API}/sendMessage", json={
            "chat_id": chat_id,
            "text": text
        })


@app.get("/")
def root():
    return {"message": "–ë–∏–∑–Ω–µ—Å –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"}


# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞ (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –≤—Ä—É—á–Ω—É—é)
async def set_webhook():
    url = f"https://drain-5mb6.onrender.com/webhook/{WEBHOOK_SECRET}"
    async with httpx.AsyncClient() as client:
        resp = await client.post(f"{TELEGRAM_API}/setWebhook", json={"url": url})
        print(resp.json())


# –ú–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É –≤—Ä—É—á–Ω—É—é, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
# asyncio.run(set_webhook())
